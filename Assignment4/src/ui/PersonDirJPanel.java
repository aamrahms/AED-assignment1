/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author aamrah
 */
public class PersonDirJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonDirJPanel
     */
    ArrayList<Person> people;
    City city;
    PersonDirectory personDir,tempDir;
    PatientDirectory patientDir;
    int save,selectedPerson;
    Person deletePerson,addPerson,updatePerson,viewPerson,person,addPatient ;
    DefaultTableModel md;
    public PersonDirJPanel(City city, PersonDirectory personDir, PatientDirectory patientDir) {
        initComponents();
        this.city=city;
        this.personDir=personDir;
        this.patientDir=patientDir;
        people=this.personDir.getPeopleDir();
        tempDir=this.personDir;
        populateTable(this.personDir);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tPatientid = new javax.swing.JTextField();
        tAge = new javax.swing.JTextField();
        tPhone = new javax.swing.JTextField();
        lblPatientid = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblUber1 = new javax.swing.JLabel();
        jTableAdmin1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        tName = new javax.swing.JTextField();
        btnAddpatient = new javax.swing.JButton();
        btnViewperson = new javax.swing.JButton();
        btnUpdateperson = new javax.swing.JButton();
        btnDeleteperson = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblPincode = new javax.swing.JLabel();
        tPincode = new javax.swing.JTextField();
        tAddress = new javax.swing.JTextField();
        btnAddperson = new javax.swing.JButton();

        tPatientid.setText("null");
        tPatientid.setEnabled(false);
        tPatientid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tPatientidActionPerformed(evt);
            }
        });

        tAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tAgeActionPerformed(evt);
            }
        });

        tPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tPhoneActionPerformed(evt);
            }
        });

        lblPatientid.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientid.setText("Patient ID");

        lblAge.setForeground(new java.awt.Color(255, 255, 255));
        lblAge.setText("Age");

        lblPhone.setForeground(new java.awt.Color(255, 255, 255));
        lblPhone.setText("Phone");

        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setText("Address");

        lblUber1.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        lblUber1.setForeground(new java.awt.Color(255, 255, 255));
        lblUber1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUber1.setText("Person Directory");

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Phone", "Address", "City", "Pincode", "HouseName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAdmin1.setViewportView(tblPerson);

        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Name");

        btnAddpatient.setText("Add as Patient");
        btnAddpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddpatientActionPerformed(evt);
            }
        });

        btnViewperson.setText("View Person");
        btnViewperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewpersonActionPerformed(evt);
            }
        });

        btnUpdateperson.setText("Update Person");
        btnUpdateperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatepersonActionPerformed(evt);
            }
        });

        btnDeleteperson.setText("Delete Person");
        btnDeleteperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletepersonActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblPincode.setForeground(new java.awt.Color(255, 255, 255));
        lblPincode.setText("Pincode");

        btnAddperson.setText("Add Person");
        btnAddperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddpersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(lblUber1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(220, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddperson)
                .addGap(31, 31, 31)
                .addComponent(btnAddpatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewperson)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateperson)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteperson)
                .addGap(66, 66, 66))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(108, 108, 108)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lblAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(lblPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGap(199, 199, 199))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(lblPatientid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGap(205, 205, 205)))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(tName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(tPatientid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(tAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(tPhone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblPincode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(tAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                                .addComponent(tPincode)))))
                                .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(62, 62, 62))
                        .addComponent(jTableAdmin1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(3, 3, 3)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblUber1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(304, 304, 304)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteperson)
                    .addComponent(btnUpdateperson)
                    .addComponent(btnViewperson)
                    .addComponent(btnAddpatient)
                    .addComponent(btnAddperson))
                .addContainerGap(444, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(141, 141, 141)
                    .addComponent(jTableAdmin1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(94, 94, 94)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblName))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tPatientid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPatientid))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAge)
                        .addComponent(tAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPhone)
                        .addComponent(tPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(50, 50, 50)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(50, 50, 50)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPincode))
                    .addGap(53, 53, 53)
                    .addComponent(btnSave)
                    .addContainerGap(38, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        checkNotNull();
        if (save==1)
        {
            addPerson = new Person();
            AddPerson(addPerson);
            this.personDir.addPersonDir(addPerson);
            populateTable(addPerson);
            this.clearTextfields();
        }
        else
        {
            if(save==2)
            {
                UpdatePerson(updatePerson);
                int uniqueID=updatePerson.getPersonId();
                this.personDir.updatePerson(uniqueID,updatePerson);
                populateTable(this.personDir);
                this.clearTextfields();
            }
        }
        
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeletepersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletepersonActionPerformed
        // TODO add your handling code here:
        selectedPerson = tblPerson.getSelectedRow();
        if (selectedPerson < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row you want to delere!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            deletePerson=people.get(selectedPerson);
            int uniqueID=deletePerson.getPersonId();
            this.personDir.removePerson(uniqueID);
            populateTable(this.personDir);
        }
    }//GEN-LAST:event_btnDeletepersonActionPerformed

    private void btnUpdatepersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatepersonActionPerformed
        // TODO add your handling code here:
        btnSave.setEnabled(true);
        save=2;
        selectedPerson = tblPerson.getSelectedRow();
        if (selectedPerson < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row you want to update!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            updatePerson=people.get(selectedPerson);
            int uniqueID=updatePerson.getPersonId();
            this.personDir.updatePerson(uniqueID,updatePerson);
            populateView(updatePerson);
            populateTable(this.personDir);
        }
    }//GEN-LAST:event_btnUpdatepersonActionPerformed
   
    private void btnViewpersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewpersonActionPerformed
        // TODO add your handling code here:
        selectedPerson = tblPerson.getSelectedRow();
        if (selectedPerson < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row you want to view!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            viewPerson=people.get(selectedPerson);
            populateView(viewPerson);
            
        }
    }//GEN-LAST:event_btnViewpersonActionPerformed

    private void btnAddpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddpatientActionPerformed
        // TODO add your handling code here:
        selectedPerson = tblPerson.getSelectedRow();
        if (selectedPerson < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row you want to add as patient!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            addPatient=people.get(selectedPerson);
            int uniqueID=addPatient.getPersonId();
            Patient patient=new Patient (addPatient);
            this.patientDir.addPatient(patient);
            populateTable(this.personDir);
        }
        
    }//GEN-LAST:event_btnAddpatientActionPerformed

    private void tPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tPhoneActionPerformed

    private void tAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tAgeActionPerformed

    private void tPatientidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tPatientidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tPatientidActionPerformed

    private void btnAddpersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddpersonActionPerformed
        // TODO add your handling code here:
        btnSave.setEnabled(true);
        this.clearTextfields();
        save=1;
    }//GEN-LAST:event_btnAddpersonActionPerformed
    //methods
    private void clearTextfields() {

        tName.setText(null);
        tAddress.setText(null);
        tAge.setText(null);
        tPatientid.setText(null);
        tPhone.setText(null);
        tPincode.setText(null); 
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddpatient;
    private javax.swing.JButton btnAddperson;
    private javax.swing.JButton btnDeleteperson;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateperson;
    private javax.swing.JButton btnViewperson;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jTableAdmin1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientid;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblUber1;
    private javax.swing.JTextField tAddress;
    private javax.swing.JTextField tAge;
    private javax.swing.JTextField tName;
    private javax.swing.JTextField tPatientid;
    private javax.swing.JTextField tPhone;
    private javax.swing.JTextField tPincode;
    private javax.swing.JTable tblPerson;
    // End of variables declaration//GEN-END:variables

    
    public void populateTable(PersonDirectory personDir){
        
        md=(DefaultTableModel)tblPerson.getModel();
        md.setRowCount(0);
        
        //int rowCount=populate.size();
        Object row[]= new Object[7];
        for(Person p : people)
        {
            
            row[0]=p.getPersonName();
            row[1]=p.getAge();
            row[2]=p.getPhone();
            row[3]=p.getAddress();
            row[4]=p.getCity().getName();
            row[5]=p.getPincode();
            if(p.getResidence()==null)
            {
                row[6]="Homeless";
            }
            else
            {
                row[6]=p.getResidence().getHomeName();
            }
            md.addRow(row);
                   
        }
    }
    public void populateTable(Person p){
       
        md=(DefaultTableModel)tblPerson.getModel();
        Object row[]= new Object[7];   
            row[0]=p.getPersonName();
            row[1]=p.getAge();
            row[2]=p.getPhone();
            row[3]=p.getAddress();
            row[4]=this.city.getName();
            row[5]=p.getPincode();
            if(p.getResidence()==null)
            {
                row[6]="Homeless";
            }
            else
            {
                row[6]=p.getResidence().getHomeName();
            }
            md.addRow(row);
        
    }
    
    private void populateView(Person p) {
        
       tName.setText(p.getPersonName());
       tAge.setText(String.valueOf(p.getAge()));
       tPincode.setText(String.valueOf(p.getPincode()));
       tPhone.setText(p.getPhone());
       tPatientid.setText(String.valueOf(p.getPatientId()));
       tAddress.setText(p.getAddress());
       
    }
    public void checkNotNull(){
        if(tName.getText().isBlank() || tAge.getText().isBlank() || tPincode.getText().isBlank() ||tPhone.getText().isBlank() || tAddress.getText().isBlank() )
        {
            JOptionPane.showMessageDialog(null, "Please enter every field!!", "Warning", JOptionPane.WARNING_MESSAGE);
        
        }
        else
        {
            return;
        }
    }
     private void UpdatePerson(Person updatePerson) {
        updatePerson.setPersonName(tName.getText());
        updatePerson.setAddress(tAddress.getText());
        updatePerson.setAge(Integer.parseInt(tAge.getText()));
        updatePerson.setPhone(tPhone.getText());
        updatePerson.setPincode(tPincode.getText());
        updatePerson.setCity(this.city);
    }
    public void AddPerson(Person addPerson){
        
        addPerson.setPersonName(tName.getText());
        addPerson.setAddress(tAddress.getText());
        addPerson.setAge(Integer.parseInt(tAge.getText()));
        addPerson.setPhone(tPhone.getText());
        addPerson.setPincode(tPincode.getText()); 
        addPerson.setCity(this.city);
            
    }

   
}


